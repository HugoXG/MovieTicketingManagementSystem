<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.FilmMapper">
    <resultMap id="FilmResultMap" type="com.example.entity.Film">
        <id property="id" column="id"/>
        <result property="status" column="status"/>
        <result property="filmName" column="film_name"/>
        <result property="releasedDate" column="released_date"/>
        <result property="filmTime" column="film_time"/>
        <result property="audience" column="audience"/>
    </resultMap>

    <select id="findAll" resultMap="FilmResultMap">
        select * from film
    </select>

    <select id="findById" resultMap="FilmResultMap">
        select * from film where id = #{id}
    </select>

    <select id="findByStatus" resultMap="FilmResultMap">
        select * from film where status = #{status}
    </select>

    <select id="findByFilmNameEquals" resultMap="FilmResultMap">
        select * from film where film_name = #{film_name_equals}
    </select>

    <select id="findByFilmNameLike" resultMap="FilmResultMap">
        select * from film where film_name like CONCAT('%', #{film_name_like}, '%')
    </select>

    <select id="findByFilmNameAndStatus" resultMap="FilmResultMap">
        select * from film where film_name like CONCAT('%', #{film_name}, '%') and status = #{status}
    </select>

    <select id="findByReleasedDate" resultMap="FilmResultMap">
        select * from film where released_date like CONCAT('%', #{released_date}, '%')
    </select>

    <select id="findByFilmTime" resultMap="FilmResultMap">
        select * from film where film_time like CONCAT('%', #{film_time}, '%')
    </select>

    <select id="findByAudience" resultMap="FilmResultMap">
        select * from film where audience like CONCAT('%', #{audience}, '%')
    </select>

    <update id="updateAudience">
        update film set audience = #{audience} where id = #{id}
    </update>

    <insert id="add">
        insert into film (status, film_name, released_date, film_time, audience)
        VALUES (1, #{film_name}, #{released_date}, #{film_time}, 0)
    </insert>

    <update id="stopById">
        update film set status = 0, audience = 0 where id = #{id}
    </update>
</mapper>